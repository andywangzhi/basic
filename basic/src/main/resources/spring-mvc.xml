<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="  
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
        http://www.springframework.org/schema/websocket 
        http://www.springframework.org/schema/websocket/spring-websocket.xsd
        http://www.springframework.org/schema/context  
		http://www.springframework.org/schema/context/spring-context-3.1.xsd  
		http://www.springframework.org/schema/mvc  
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<bean
				class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->
			<!-- 处理responseBody 里面日期类型 --> 
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="prettyPrint" value="true" />
                <property name="supportedMediaTypes">
                	<list>
						<value>text/html;charset=UTF-8</value>
					</list>
                </property>
			</bean>
			<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<!-- 设置为true 以忽略对header accept的支持 -->
		<property name="ignoreAcceptHeader" value="true" />
		<!-- 当url不加后缀区分时，默认显示的数据格式为json -->
		<property name="defaultContentType" value="application/json" />
		<property name="mediaTypes">
			<value>
				json=application/json
				xml=application/xml
			</value>
		</property>
	</bean>

	<!-- 引入属性文件 <context:property-placeholder location="classpath:jdbc.properties" 
		/> -->
	<!-- controller包(自动注入) -->
	<context:component-scan base-package="com.zw">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
	</context:component-scan>
	<!--静态资源访问 -->
	<mvc:default-servlet-handler />

	<mvc:resources mapping="/js/**" location="/js/"
		cache-period="31556926" />

	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/basic/" />
		<property name="suffix" value=".html" />
	</bean>
	
	<!-- 通用拦截器 -->
	<mvc:interceptors>
        <mvc:interceptor>
        	<mvc:mapping path="/*/*"/>
            <bean id="commonInterceptor" class="com.zw.interceptor.CommonInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>
	<!-- 支持上传文件 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>  

</beans>